<?php

dpkg --configure -a

// MANTENIMIENTO
sudo su
service ssh stop
sudo pkill dropbear
service dropbear stop
fuser -k 143/tcp
fuser -k 8022/tcp
sudo pkill stunnel5
service stunnel5 stop
fuser -k 441/tcp
fuser -k 442/tcp
fuser -k 444/tcp
sudo pkill openvpn
service openvpn stop
fuser -k 1194/tcp
fuser -k 1194/udp
sudo pkill v2ray
service v2ray stop
fuser -k 8443/tcp
sudo pkill sslh
service sslh stop
fuser -k 443/tcp
sudo pkill badvpn-udpgw
fuser -k 7300/tcp
fuser -k 7400/tcp
fuser -k 7500/tcp
sudo pkill squid3
sudo pkill squid
service squid3 stop
service squid stop
fuser -k 8080/tcp
fuser -k 3128/tcp
fuser -k 8799/tcp
apt-get update --allow-insecure-repositories && apt-get upgrade -y
sudo rm /etc/passwd.*
sudo rm /etc/shadow.*
sudo rm /etc/group.*
sudo rm /etc/gshadow.*
sudo rm /etc/subgid.*
sed -i '/^bnet-/d' /etc/passwd
sed -i '/^bnet-/d' /etc/shadow
sed -i '/^bnet-/d' /etc/group
sed -i '/^bnet-/d' /etc/gshadow
sed -i '/^bnet-/d' /etc/subgid
#GRUPO=ltg; for u in $(getent group $GRUPO | sed -e 's/^.*:.*:.*://' -e 's/,/ /g'); do sudo userdel --force $u; done
cat /dev/null > lifetime.db
echo "root 5" >> lifetime.db
sed -i '$a adrianv1 300' lifetime.db
sudo delgroup ltg --force
addgroup ltg
service ssh start
service dropbear start
service stunnel5 start
bash bnetcache.sh
bash bnetcachews.sh
rm -r /var/log/journal/*
rm -r /var/cache/*
rm -r /var/log/v2ray/*
nano /etc/passwd

init 6

// CONTRASEÃ‘AS
Comentar ultima linea
nano /etc/security/pwquality.conf
apt-get remove --auto-remove libpam-cracklib -y
passwd root

// USER
useradd ?

passwd ?

nano /etc/passwd

root:x:0:0:root:/root:/usr/sbin/nologin
?:x:0:0::/root:/bin/bash

// TC
apt install iptables iproute2

tc qdisc del dev eth0 root
tc qdisc del dev eth0 ingress
tc qdisc add dev eth0 root handle 1: htb default 10
tc class add dev eth0 parent 1: classid 1:1 htb rate 1000mbit
tc class add dev eth0 parent 1:1 classid 1:10 htb rate 1000mbit

// HORARIO
timedatectl set-timezone America/Mexico_City
ln -fs /usr/share/zoneinfo/America/Mexico_City /etc/localtime

// DNS
nano /etc/hosts
IP NOMBRE

apt-get remove resolvconf
systemctl enable systemd-resolved
systemctl start systemd-resolved

nano /etc/resolv.conf

nano /etc/systemd/resolved.conf
DNS=8.8.8.8 8.8.4.4 127.0.0.53

sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf

nano /run/systemd/resolve/resolv.conf
nameserver 8.8.8.8
nameserver 8.8.4.4
nameserver 127.0.0.53

sudo nano /etc/network/interfaces

dns-nameservers 8.8.8.8 8.8.4.4 127.0.0.53

------------------------------------------------------------
apt-get install resolvconf

systemctl start resolvconf.service
systemctl enable resolvconf.service

nano /etc/network/interfaces

dns-nameservers 1.1.1.1 1.0.0.1 127.0.0.53

nano /etc/resolvconf/resolv.conf.d/original
nano /etc/resolvconf/resolvconf.d/head

nameserver 1.1.1.1
nameserver 1.0.0.1
nameserver 127.0.0.53

nano /etc/resolv.conf

systemctl disable systemd-resolved

# Verificar
nano /etc/systemd/resolved.conf

nano /run/systemd/resolve/resolv.conf

// UPDATE
su
ufw disable
systemctl disable ufw
df -h
fdisk -l
resize2fs /dev/vda1
resize2fs /dev/vda2

apt-get -y --purge remove samba*;
apt-get -y --purge remove apache2*;
apt-get -y --purge remove bind9*;

apt-get install dos2unix lsof iptables build-essential psmisc curl python python3 python-pip -y

// TCP, BADVPN y BBR (OPCIONAL)
BadVPN obligatorio

rm badvpn129.sh
rm badvpn.sh
badvpn stop
fuser -k 7300/tcp
fuser -k 7300/udp
fuser -k 7400/tcp
fuser -k 7400/udp
fuser -k 7500/tcp
fuser -k 7500/udp
killall badvpn-udpgw
pkill badvpn-udpgw
rm -r /bin/badvpn
rm -r /usr/local/bin/badvpn-udpgw
rm -r /usr/bin/badvpn-udpgw
rm /bin/badvpn-udpgw
apt-get update && apt-get upgrade && wget https://bnetservice.com.mx/panel/scripts/badvpn.sh --no-check-certificate && bash badvpn.sh

apt-get update -y
apt-get upgrade -y

// GRUPO DE USUARIOS
addgroup ltg

sudo delgroup ltg --force

// CONTRAB
// WEBSOCKET
rm bnetcachews.sh
wget https://bnetservice.com.mx/bNetService/root/bnetcachews.sh --no-check-certificate
dos2unix bnetcachews.sh
chmod +x bnetcachews.sh
rm limpieza.sh
wget https://bnetservice.com.mx/panel/scripts/limpieza.sh --no-check-certificate
dos2unix limpieza.sh
chmod +x limpieza.sh
rm monitor1.sh
wget https://bnetservice.com.mx/bNetService/root/monitor1.sh --no-check-certificate
dos2unix monitor1.sh
chmod +x monitor1.sh
rm monitorpremium1.sh
wget https://bnetservice.com.mx/bNetService/root/monitorpremium1.sh --no-check-certificate
dos2unix monitorpremium1.sh
chmod +x monitorpremium1.sh
rm kill1hr.sh
wget https://bnetservice.com.mx/bNetService/root/kill1hr.sh --no-check-certificate
dos2unix kill1hr.sh
chmod +x kill1hr.sh
rm servicesws.sh
wget https://bnetservice.com.mx/bNetService/root/servicesws.sh --no-check-certificate
dos2unix servicesws.sh
chmod +x servicesws.sh
rm checkerws.sh
wget https://bnetservice.com.mx/bNetService/root/checkerws.sh --no-check-certificate
dos2unix checkerws.sh
chmod +x checkerws.sh
nano /etc/crontab

// NORMAL
rm bnetcache.sh
wget https://bnetservice.com.mx/bNetService/root/bnetcache.sh --no-check-certificate
dos2unix bnetcache.sh
chmod +x bnetcache.sh
rm limpieza.sh
wget https://bnetservice.com.mx/panel/scripts/limpieza.sh --no-check-certificate
dos2unix limpieza.sh
chmod +x limpieza.sh
rm monitor1.sh
wget https://bnetservice.com.mx/bNetService/root/monitor1.sh --no-check-certificate
dos2unix monitor1.sh
chmod +x monitor1.sh
rm monitor2.sh
wget https://bnetservice.com.mx/bNetService/root/monitor2.sh --no-check-certificate
dos2unix monitor2.sh
chmod +x monitor2.sh
rm monitorpremium1.sh
wget https://bnetservice.com.mx/bNetService/root/monitorpremium1.sh --no-check-certificate
dos2unix monitorpremium1.sh
chmod +x monitorpremium1.sh
rm monitorpremium2.sh
wget https://bnetservice.com.mx/bNetService/root/monitorpremium2.sh --no-check-certificate
dos2unix monitorpremium2.sh
chmod +x monitorpremium2.sh
rm kill1hr.sh
wget https://bnetservice.com.mx/bNetService/root/kill1hr.sh --no-check-certificate
dos2unix kill1hr.sh
chmod +x kill1hr.sh
rm services.sh
wget https://bnetservice.com.mx/bNetService/root/services.sh --no-check-certificate
dos2unix services.sh
chmod +x services.sh
rm checker.sh
wget https://bnetservice.com.mx/bNetService/root/checker.sh --no-check-certificate
dos2unix checker.sh
chmod +x checker.sh
whereis shutdown
nano /etc/crontab

// WEBSOCKET
40 0    * * *   adrian  /sbin/shutdown -r now
#39 0   * * *   adrian  /bin/bash /root/kill1hr.sh > /dev/null 2> /dev/null
#40 0   * * *   adrian  /bin/bash /root/servicesws.sh > /dev/null 2> /dev/null
* *     * * *   adrian  /bin/bash /root/checkerws.sh > /dev/null 2> /dev/null
*/30 *  * * *   adrian  /bin/bash /root/limpieza.sh > /dev/null 2> /dev/null
0 */1   * * *   adrian  /bin/bash /root/bnetcachews.sh > /dev/null 2> /dev/null
*/10 *  * * *   adrian  /bin/bash /root/monitor1.sh > /dev/null 2> /dev/null
*/10 *  * * *   adrian  /bin/bash /root/monitorpremium1.sh > /dev/null 2> /dev/null

//NORMAL
40 0    * * *   adrian  /sbin/shutdown -r now
#39 0   * * *   adrian  /bin/bash /root/kill1hr.sh > /dev/null 2> /dev/null
#0 15   * * *   adrian  /bin/bash /root/services.sh > /dev/null 2> /dev/null
* *     * * *   adrian  /bin/bash /root/checker.sh > /dev/null 2> /dev/null
*/30 *  * * *   adrian  /bin/bash /root/limpieza.sh > /dev/null 2> /dev/null
0 */1   * * *   adrian  /bin/bash /root/bnetcache.sh > /dev/null 2> /dev/null
*/10 *  * * *   adrian  /bin/bash /root/monitor1.sh > /dev/null 2> /dev/null
*/10 *  * * *   adrian  /bin/bash /root/monitor2.sh > /dev/null 2> /dev/null
*/10 *  * * *   adrian  /bin/bash /root/monitorpremium1.sh > /dev/null 2> /dev/null
*/10 *  * * *   adrian  /bin/bash /root/monitorpremium2.sh > /dev/null 2> /dev/null
0 6     * * *   adrian  bash <(curl -L -s https://multi.netlify.app/go.sh) && service v2ray restart > /dev/null 2> /dev/null

// rc.local
nano /etc/systemd/system/rc-local.service

[Unit]
 Description=/etc/rc.local Compatibility
 ConditionPathExists=/etc/rc.local

[Service]
 Type=forking
 ExecStart=/etc/rc.local start
 TimeoutSec=0
 StandardOutput=tty
 RemainAfterExit=yes
 SysVStartPriority=99

[Install]
 WantedBy=multi-user.target
 
nano /etc/rc.local

#!/bin/bash

exit 0

chmod +x /etc/rc.local
systemctl enable rc-local
systemctl start rc-local.service
systemctl status rc-local.service

nano /etc/rc.local

// WEBSOCKET
#!/bin/bash
tc qdisc del dev eth0 root
tc qdisc del dev eth0 ingress
tc qdisc add dev eth0 root handle 1: htb default 10
tc class add dev eth0 parent 1: classid 1:1 htb rate 1000mbit
tc class add dev eth0 parent 1:1 classid 1:10 htb rate 1000mbit
iptables -N LOGDROP
iptables -F LOGDROP
iptables -A LOGDROP -j LOG --log-prefix "LOGDROP "
iptables -A LOGDROP -j DROP
iptables -I FORWARD -p tcp -m ipp2p --bit -j LOGDROP
iptables -I FORWARD -p udp -m ipp2p --bit -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "BitTorrent" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "BitTorrent protocol" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "peer_id=" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string ".torrent" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "announce.php?passkey=" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "torrent" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "announce" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "info_hash" -j LOGDROP
iptables -A FORWARD -m string --string "get_peers" --algo bm -j LOGDROP
iptables -A FORWARD -m string --string "announce_peer" --algo bm -j LOGDROP
iptables -A FORWARD -m string --string "find_node" --algo bm -j LOGDROP
iptables -A INPUT -p tcp --dport 25 -j DROP
iptables -A OUTPUT -p tcp --sport 25 -j DROP
service cron restart
service ssh restart
service dropbear restart
service stunnel5 restart
badvpn start
fuser -k 80/tcp
python /root/ws.py & > /dev/null 2>&1
exit 0

// NORMAL
#!/bin/bash
tc qdisc del dev eth0 root
tc qdisc del dev eth0 ingress
tc qdisc add dev eth0 root handle 1: htb default 10
tc class add dev eth0 parent 1: classid 1:1 htb rate 1000mbit
tc class add dev eth0 parent 1:1 classid 1:10 htb rate 1000mbit
iptables -N LOGDROP
iptables -F LOGDROP
iptables -A LOGDROP -j LOG --log-prefix "LOGDROP "
iptables -A LOGDROP -j DROP
iptables -I FORWARD -p tcp -m ipp2p --bit -j LOGDROP
iptables -I FORWARD -p udp -m ipp2p --bit -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "BitTorrent" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "BitTorrent protocol" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "peer_id=" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string ".torrent" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "announce.php?passkey=" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "torrent" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "announce" -j LOGDROP
iptables -A FORWARD -m string --algo bm --string "info_hash" -j LOGDROP
iptables -A FORWARD -m string --string "get_peers" --algo bm -j LOGDROP
iptables -A FORWARD -m string --string "announce_peer" --algo bm -j LOGDROP
iptables -A FORWARD -m string --string "find_node" --algo bm -j LOGDROP
iptables -A INPUT -p tcp --dport 25 -j DROP
iptables -A OUTPUT -p tcp --sport 25 -j DROP
service cron restart
service ssh restart
service sslh restart
service dropbear restart
service stunnel5 restart
service openvpn restart
badvpn start
python /root/8081.py & > /dev/null 2>&1
python /root/8082.py & > /dev/null 2>&1
python /root/8083.py & > /dev/null 2>&1
python /root/8084.py & > /dev/null 2>&1
scktcheck 8085 'bNetService' & > /dev/null 2>&1
scktcheckDropbear 8086 'bNetService' & > /dev/null 2>&1
sslh --listen 0.0.0.0:443 --ssl 127.0.0.1:441 --openvpn 127.0.0.1:1194 --anyprot 127.0.0.1:143 --pidfile /var/run/sslh/sslh.pid > /dev/null 2>&1
cd /etc/openvpn; screen -dmS ovpnscr openvpn --config "server.conf"; cd > /dev/null 2>&1
exit 0

// PROXIES PYTHON
// WEBSOCKET
rm ws.py
wget https://bnetservice.com.mx/bNetService/root/ws.py --no-check-certificate
chmod 777 ws.py

// NORMALES
wget https://bnetservice.com.mx/bNetService/root/8081.py --no-check-certificate
chmod +x 8081.py
wget https://bnetservice.com.mx/bNetService/root/8082.py --no-check-certificate
chmod +x 8082.py
wget https://bnetservice.com.mx/bNetService/root/8083.py --no-check-certificate
chmod +x 8083.py
wget https://bnetservice.com.mx/bNetService/root/8084.py --no-check-certificate
chmod +x 8084.py
wget https://bnetservice.com.mx/bNetService/bNetProxySSH.tar.gz --no-check-certificate
tar -xf bNetProxySSH.tar.gz
bash instalar bNetService
rm bNetProxySSH.tar.gz
rm -r instalar
wget https://bnetservice.com.mx/bNetService/bNetProxyDROPBEAR.tar.gz --no-check-certificate
tar -xf bNetProxyDROPBEAR.tar.gz
bash instalar bNetService
rm bNetProxyDROPBEAR.tar.gz
rm -r instalar

// SSLH
apt-get install sslh -y

nano /etc/default/sslh

RUN=yes
sslh --listen 0.0.0.0:80 --ssh 127.0.0.1:8022 --http 127.0.0.1:81 --anyprot 127.0.0.1:8080 --pidfile /var/run/sslh/sslh.pid

apt-get remove sslh -y
sudo apt remove sslh -y
sudo mv /var/lib/dpkg/info/sslh.* /tmp

// SCRIPT PANEL
apt-get update -y
apt-get upgrade -y

// INSTALACION
rm install.sh
wget http://80.211.191.58/bnetmanager/install.sh
chmod +x install.sh
./install.sh

// Desinstalar Squid en WEBSOCKET
apt-get remove squid*
apt-get purge squid
apt-get remove --auto-remove squid
apt-get clean squid

// V2RAY 8443
source <(curl -sL https://multi.netlify.app/v2ray.sh) -k

Modificar run

// DROPBEAR
apt-get update && wget https://raw.githubusercontent.com/barcewin/scripts/master/dropbear && bash dropbear
nano /etc/default/dropbear

NO_START=0
DROPBEAR_PORT=143
DROPBEAR_EXTRA_ARGS='-p 8022'
DROPBEAR_BANNER='/etc/banner'

// STUNNEL5 (SSL)
apt-get update && apt-get install ca-certificates && apt-get install libssl-dev && wget https://raw.githubusercontent.com/barcewin/scripts/master/stunnel5 --no-check-certificate && bash stunnel5

service stunnel5 restart
chmod 700 /usr/local/etc/stunnel/stunnel.pem
nano /usr/local/etc/stunnel/stunnel.conf

// WEBSOCKET SSL
setuid = stunnel
setgid = stunnel
chroot = /var/lib/stunnel
pid = /stunnel.pid
client = no
[ssh]
cert = /usr/local/etc/stunnel/stunnel.pem
accept = 443
connect = 127.0.0.1:80

// NORMAL SSL
setuid = stunnel
setgid = stunnel
chroot = /var/lib/stunnel
pid = /stunnel.pid
client = no
[ssh]
cert = /usr/local/etc/stunnel/stunnel.pem
accept = 441
connect = 127.0.0.1:22222
[dropbear]
cert = /usr/local/etc/stunnel/stunnel.pem
accept = 444
connect = 127.0.0.1:143
[openvpn]
cert = /usr/local/etc/stunnel/stunnel.pem
accept = 442
connect = 127.0.0.1:1194

// CLOUDFLARE Y CLOUDFRONT WEBSOCKET
ZeroSSL
cat private.key certificate.crt ca_bundle.crt > stunnel.pem

// OPENVPN
wget https://bnetservice.com.mx/bNetService/newadm/instalar.sh --no-check-certificate && chmod +x instalar.sh && ./instalar.sh

// SSH
/usr/bin/ssh-keygen -A

cd /etc/ssh
rm sshd_config
wget https://bnetservice.com.mx/bNetService/etc/sshd_config --no-check-certificate
cd
service ssh restart
cd /etc/
rm banner
wget https://bnetservice.com.mx/bNetService/etc/banner --no-check-certificate
cd
chmod 700 /usr/local/etc/stunnel/stunnel.pem
service ssh restart
service dropbear restart
service stunnel5 restart

// BASHRC
nano .bashrc
export PATH="$HOME/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/bin:/bin:/usr/local/games:/usr/games"

Instalar apache para el speedtest

// Eliminar apache
service apache2 stop
apt-get purge apache2 apache2* apache2-bin apache2-data apache2-utils -y
apt-get autoremove -y
rm -rf /usr/sbin/apache2 /usr/lib/apache2 /etc/apache2 /usr/share/apache2 /usr/share/man/man8/apache2.8.gz
